// Write your code here
import './index.css'
import Loader from 'react-loader-spinner'
import 'react-loader-spinner/dist/loader/css/react-spinner-loader.css'
import {Component} from 'react'
import LatestMatch from '../LatestMatch'
import MatchCard from '../MatchCard'

class TeamMatches extends Component {
  state = {
    matchesData: [],
    isLoading: true,
  }
  componentDidMount() {
    this.getTeamMatches()
  }
  getTeamMatches = async () => {
    const {match} = this.props
    const {params} = match
    const {id} = params
    const response = await fetch(`https://apis.ccbp.in/ipl/${id}`)
    const fetchedData = await response.json()
    const updatedData = {
      teamBannerUrl: fetchedData.team_banner_url,
      latestMatchDetails: {
        id: fetchedData.latest_match_details.id,
        competingTeam: fetchedData.latest_match_details.competing_team,
        competingTeamLogo: fetchedData.latest_match_details.competing_team_logo,
        date: fetchedData.latest_match_details.date,
        firstInnings: fetchedData.latest_match_details.first_innings,
        manOfTheMatch: fetchedData.latest_match_details.man_of_the_match,
        matchStatus: fetchedData.latest_match_details.match_status,
        result: fetchedData.latest_match_details.result,
        secondInnings: fetchedData.latest_match_details.second_innings,
        umpires: fetchedData.latest_match_details.umpires,
        venue: fetchedData.latest_match_details.venue,
      },
      recentMatches: fetchedData.recent_matches.map(recentMatch => ({
        umpires: recentMatch.umpires,
        result: recentMatch.result,
        manOfTheMatch: recentMatch.man_of_the_match,
        id: recentMatch.id,
        date: recentMatch.date,
        venue: recentMatch.venue,
        competingTeam: recentMatch.competing_team,
        competingTeamLogo: recentMatch.competing_team_logo,
        firstInnings: recentMatch.first_innings,
        secondInnings: recentMatch.second_innings,
        matchStatus: recentMatch.match_status,
      })),
    }
    this.setState({matchesData: updatedData, isLoading: false})
  }
  renderTeamMatches = () => {
    const {matchesData} = this.state
    const {teamBannerUrl, latestMatchDetails} = matchesData
    return (
      <div className="team-matches-container">
        <img src={teamBannerUrl} alt="team banner" className="team-banner" />
        <LatestMatch latestMatch={latestMatchDetails} />
        {this.renderRecentMatchesList()}
      </div>
    )
  }
  renderRecentMatchesList = () => {
    const {matchesData} = this.state
    const {recentMatches} = matchesData
    return (
      <ul className="recent-matches-list">
        {recentMatches.map(eachMatch => (
          <MatchCard matchData={eachMatch} key={eachMatch.id} />
        ))}
      </ul>
    )
  }

  renderLoader = () => {
    ;<div testid="loader" className="loader-container">
      <Loader type="BallTriangle" color="#00bfff" height={80} width={80} />
    </div>
  }
  render() {
    const {isLoading} = this.state
    const {match} = this.props
    const {params} = match
    const {id} = params
    return (
      <div className={`app-team-matches-container ${id}`}>
        {isLoading ? this.renderLoader() : this.renderTeamMatches()}
      </div>
    )
  }
}

export default TeamMatches








/* Write your CSS here */
.app-team-matches-container {
  min-height: 100vh;
  display: flex;
  justify-content: center;
}
.team-matches-container {
  width: 90%;
  margin-top: 40px;
  max-width: 500px;
}
@media screen and (min-width: 768px) {
  .team-matches-container {
    margin-top: 56px;
    max-width: 1110px;
  }
}
.team banner {
  width: 100%;
}
.loader-container {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}
.RCB {
  background: linear-gradient(to top, #1e293b, #a4261d);
}
.KKR {
  background: linear-gradient(to top, #1e293b, #5755a7);
}
.KXP {
  background: linear-gradient(to top, #1e293b, #d91c1f);
}
.CSK {
  background: linear-gradient(to top, #1e293b, #f7db00);
}
.RR {
  background: linear-gradient(to top, #1e293b, #da237b);
}
.MI {
  background: linear-gradient(to top, #1e293b, #13418b);
}
.SH {
  background: linear-gradient(to top, #1e293b, #f26d22);
}
.RCB {
  background: linear-gradient(to top, #1e293b, #4f5db0);
}
.recent-matches-list {
  display: flex;
  flex-wrap: wrap;
  margin-top: 24px;
  width: 100%;
}

@media screen and (max-width: 767px) {
  .recent-matches-list {
    padding-left: 0px;
  }
}

@media screen and (min-width: 768px) {
  .recent-matches-list {
    padding-top: 32px;
  }
}
